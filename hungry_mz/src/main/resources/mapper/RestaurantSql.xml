<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="data.mapper.RestaurantMapper">
	<select id="getRestaurantById" resultType="data.dto.RestaurantDto">
		SELECT restaurant_id AS restaurantId, title, location, image, registered_date
		FROM restaurant
		WHERE restaurant_id = #{restaurantId}
	</select>
	<select id="getCountByTitle" resultType="int" parameterType="String">
		select count(*) from restaurant where title=#{title}
	</select>
	<select id="getRestaurantByTitle" parameterType="String" resultType="data.dto.RestaurantDto">
		SELECT restaurant_id AS restaurantId, title, location, image, registered_date
		FROM restaurant
		WHERE title = #{title}
	</select>
	<select id="getRestaurantList" resultType="data.dto.RestaurantDto">
		SELECT restaurant_id AS restaurantId, title, location, image, registered_date
		FROM restaurant;
	</select>
	<insert id="insertRestaurant" parameterType="data.dto.RestaurantDto">
		insert into restaurant (title, location, image)
		values (#{title}, #{location}, #{image})
	</insert>
	<select id="getTotalCount" resultType="int">
		select count(*) from restaurant
	</select>
	<select id="getPagingListOrderByStarDesc" parameterType="Map" resultType="data.dto.RestaurantDto">
		SELECT
			r.restaurant_id as restaurantId,
			r.title as title,
			r.image as image,
			r.registered_date as registeredDate,
			COALESCE(COUNT(v.review_id), 0) AS reviewCount,
			COALESCE(AVG(v.star), 0) AS averageStar  -- 별점이 없는 경우 0으로 처리
		FROM restaurant r
				 LEFT JOIN review v ON r.restaurant_id = v.restaurant_id
		GROUP BY r.restaurant_id
		ORDER BY averageStar DESC
			limit #{startNum},#{perPage};
	</select>
</mapper>