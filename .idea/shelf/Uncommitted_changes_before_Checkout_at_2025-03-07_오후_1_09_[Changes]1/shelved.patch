Index: hungry_mz/src/main/java/com/menu/controller/MenuController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.menu.controller;\r\n\r\nimport com.menu.service.MenuService;\r\nimport com.naver.storage.NcpObjectStorageService;\r\nimport data.dto.MenuDto;\r\nimport lombok.RequiredArgsConstructor;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\n\r\nimport java.util.List;\r\n\r\n@Controller\r\n@RequiredArgsConstructor\r\npublic class MenuController {\r\n    private final MenuService menuService;\r\n    private final NcpObjectStorageService storageService;\r\n    @GetMapping(\"/menu/list\")\r\n    public List<MenuDto> getMenuListOrderByPriceAsc(){\r\n        return menuService.getMenuListOrderByPriceAsc();\r\n    }\r\n    @GetMapping(\"/menu/{menuId}\")\r\n    public MenuDto getMenuByMenuId(@PathVariable int menuId){\r\n        return menuService.getMenuByMenuId(menuId);\r\n    }\r\n    @GetMapping(\"/menu/restaurant/{restaurantId}\")\r\n    public List<MenuDto> getMenuListByRestaurantId(@PathVariable int restaurantId){\r\n        return menuService.getMenuListByRestaurantId(restaurantId);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hungry_mz/src/main/java/com/menu/controller/MenuController.java b/hungry_mz/src/main/java/com/menu/controller/MenuController.java
--- a/hungry_mz/src/main/java/com/menu/controller/MenuController.java	
+++ b/hungry_mz/src/main/java/com/menu/controller/MenuController.java	
@@ -16,6 +16,9 @@
     private final MenuService menuService;
     private final NcpObjectStorageService storageService;
     @GetMapping("/menu/list")
+    public String menuList(){
+        return "food/menuList";
+    }
     public List<MenuDto> getMenuListOrderByPriceAsc(){
         return menuService.getMenuListOrderByPriceAsc();
     }
Index: hungry_mz/src/main/java/data/mapper/UserMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package data.mapper;\r\n\r\nimport java.util.List;\r\n\r\nimport org.apache.ibatis.annotations.Mapper;\r\n\r\nimport data.dto.UserDto;\r\n\r\n@Mapper\r\npublic interface UserMapper {\r\n\tpublic int checkUsername(String username);\r\n\tpublic List<UserDto> getAllUsers();\r\n\tpublic void insertUser(UserDto dto);\r\n\tpublic int loginCheck(String username, String password);\r\n\tpublic void deleteUser(int user_id);\r\n\tpublic void updateUser(UserDto dto);\r\n\tpublic UserDto getSelectByUsername(String username);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hungry_mz/src/main/java/data/mapper/UserMapper.java b/hungry_mz/src/main/java/data/mapper/UserMapper.java
--- a/hungry_mz/src/main/java/data/mapper/UserMapper.java	
+++ b/hungry_mz/src/main/java/data/mapper/UserMapper.java	
@@ -1,10 +1,9 @@
 package data.mapper;
 
-import java.util.List;
-
-import org.apache.ibatis.annotations.Mapper;
-
 import data.dto.UserDto;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
 
 @Mapper
 public interface UserMapper {
Index: hungry_mz/target/classes/mapper/MenuSql.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n<mapper namespace=\"data.mapper.MenuMapper\">\r\n    <select id=\"getMenuListByRestaurantId\" parameterType=\"int\" resultType=\"MenuDto\">\r\n        select * from menu where restaurant_id=#{restaurantId} order by price asc;\r\n    </select>\r\n    <select id=\"getMenuListOrderByPriceAsc\" resultType=\"MenuDto\">\r\n        select * from menu order by price asc\r\n    </select>\r\n    <select id=\"getMenuByMenuId\" parameterType=\"int\" resultType=\"MenuDto\">\r\n        select * from menu where menu_id=#{menuId}\r\n    </select>\r\n    <insert id=\"insertMenu\" parameterType=\"MenuDto\">\r\n        INSERT INTO menu (restaurant_id, name, price, image)\r\n        VALUES (#{restaurantId}, #{name}, #{price}, #{image})\r\n    </insert>\r\n    <delete id=\"deleteMenuByMenuId\" parameterType=\"int\">\r\n        delete from menu where menu_id=#{menuId}\r\n    </delete>\r\n    <update id=\"updateMenu\" parameterType=\"MenuDto\">\r\n        UPDATE menu\r\n        SET\r\n            restaurant_id = #{restaurantId},\r\n            name = #{name},\r\n            price = #{price},\r\n            image = #{image}\r\n        WHERE menu_id = #{menuId}\r\n    </update>\r\n</mapper>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hungry_mz/target/classes/mapper/MenuSql.xml b/hungry_mz/target/classes/mapper/MenuSql.xml
--- a/hungry_mz/target/classes/mapper/MenuSql.xml	
+++ b/hungry_mz/target/classes/mapper/MenuSql.xml	
@@ -1,29 +1,30 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="data.mapper.MenuMapper">
-    <select id="getMenuListByRestaurantId" parameterType="int" resultType="MenuDto">
+    <select id="getMenuListByRestaurantId" parameterType="int" resultType="data.dto.MenuDto">
         select * from menu where restaurant_id=#{restaurantId} order by price asc;
     </select>
-    <select id="getMenuListOrderByPriceAsc" resultType="MenuDto">
+    <select id="getMenuListOrderByPriceAsc" resultType="data.dto.MenuDto">
         select * from menu order by price asc
     </select>
-    <select id="getMenuByMenuId" parameterType="int" resultType="MenuDto">
+    <select id="getMenuByMenuId" parameterType="int" resultType="data.dto.MenuDto">
         select * from menu where menu_id=#{menuId}
     </select>
-    <insert id="insertMenu" parameterType="MenuDto">
-        INSERT INTO menu (restaurant_id, name, price, image)
-        VALUES (#{restaurantId}, #{name}, #{price}, #{image})
+    <insert id="insertMenu" parameterType="data.dto.MenuDto">
+        INSERT INTO menu (restaurant_id, name, price, image, description)
+        VALUES (#{restaurantId}, #{name}, #{price}, #{image} , #{description})
     </insert>
     <delete id="deleteMenuByMenuId" parameterType="int">
         delete from menu where menu_id=#{menuId}
     </delete>
-    <update id="updateMenu" parameterType="MenuDto">
+    <update id="updateMenu" parameterType="data.dto.MenuDto">
         UPDATE menu
         SET
             restaurant_id = #{restaurantId},
             name = #{name},
             price = #{price},
-            image = #{image}
+            image = #{image},
+            description = #{description},
         WHERE menu_id = #{menuId}
     </update>
 </mapper>
\ No newline at end of file
Index: hungry_mz/target/classes/mapper/RestaurantSql.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n<mapper namespace=\"data.mapper.RestaurantMapper\">\r\n\t<select id=\"getRestaurantById\" parameterType=\"int\" resultType=\"RestaurantDto\">\r\n\t\tselect * from restaurant where restaurant_id=#{restaurantId}\r\n\t</select>\r\n\t<select id=\"getRestaurantList\" resultType=\"RestaurantDto\">\r\n\t\tselect * from restaurant;\r\n\t</select>\r\n</mapper>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hungry_mz/target/classes/mapper/RestaurantSql.xml b/hungry_mz/target/classes/mapper/RestaurantSql.xml
--- a/hungry_mz/target/classes/mapper/RestaurantSql.xml	
+++ b/hungry_mz/target/classes/mapper/RestaurantSql.xml	
@@ -1,10 +1,24 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="data.mapper.RestaurantMapper">
-	<select id="getRestaurantById" parameterType="int" resultType="RestaurantDto">
-		select * from restaurant where restaurant_id=#{restaurantId}
+	<select id="getRestaurantById" resultType="data.dto.RestaurantDto">
+		SELECT restaurant_id AS restaurantId, title, location, image, registered_date
+		FROM restaurant
+		WHERE restaurant_id = #{restaurantId}
+	</select>
+	<select id="getCountByTitle" resultType="int" parameterType="String">
+		select count(*) from restaurant where title=#{title}
 	</select>
-	<select id="getRestaurantList" resultType="RestaurantDto">
+	<select id="getRestaurantByTitle" parameterType="String" resultType="data.dto.RestaurantDto">
+		SELECT restaurant_id AS restaurantId, title, location, image, registered_date
+		FROM restaurant
+		WHERE title = #{title}
+	</select>
+	<select id="getRestaurantList" resultType="data.dto.RestaurantDto">
 		select * from restaurant;
 	</select>
+	<insert id="insertRestaurant" parameterType="data.dto.RestaurantDto">
+		insert into restaurant (title, location, image)
+		values (#{title}, #{location}, #{image})
+	</insert>
 </mapper>
\ No newline at end of file
